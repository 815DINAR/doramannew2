// admin.js v1.3 - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å –ø–æ–ª–µ–º –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞
document.addEventListener('DOMContentLoaded', () => {
    console.log('üöÄ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ v1.3');
    
    const uploadForm = document.getElementById('uploadForm');
    const loadVideosBtn = document.getElementById('loadVideosBtn');
    const deleteAllBtn = document.getElementById('deleteAllBtn');
    const videosList = document.getElementById('videosList');
    const videosStatus = document.getElementById('videosStatus');
    const confirmModal = document.getElementById('confirmModal');
    const confirmYes = document.getElementById('confirmYes');
    const confirmNo = document.getElementById('confirmNo');
    const confirmText = document.getElementById('confirmText');
    
    let currentVideos = [];
    let pendingAction = null;

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
    function showStatus(message, type = 'info') {
        console.log(`üì¢ –°—Ç–∞—Ç—É—Å [${type}]: ${message}`);
        videosStatus.innerHTML = `<span class="${type}">üì¢ ${message}</span>`;
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    function showConfirmModal(message, action) {
        console.log('üîî –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ:', message);
        console.log('üéØ –ü–æ–ª—É—á–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ:', typeof action);
        console.log('üìù –î–µ–π—Å—Ç–≤–∏–µ —Ñ—É–Ω–∫—Ü–∏—è?', typeof action === 'function');
        
        confirmText.textContent = message;
        pendingAction = action;
        
        console.log('üíæ pendingAction —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', typeof pendingAction);
        console.log('üîç pendingAction === action:', pendingAction === action);
        
        confirmModal.classList.add('show');
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∏–¥–Ω–æ');
        console.log('üé™ –ö–ª–∞—Å—Å—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', confirmModal.className);
    }

    // –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function hideConfirmModal() {
        console.log('‚ùå –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
        console.log('üîç pendingAction –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π:', typeof pendingAction);
        confirmModal.classList.remove('show');
        // –ù–ï –æ—á–∏—â–∞–µ–º pendingAction –∑–¥–µ—Å—å —Å—Ä–∞–∑—É - –¥–µ–ª–∞–µ–º —ç—Ç–æ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        console.log('üé™ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–∫—Ä—ã—Ç–æ');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ
    uploadForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        console.log('üì§ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ');
        
        const file = document.getElementById('videoFile').files[0];
        const title = document.getElementById('videoTitle').value;
        const description = document.getElementById('videoDescription').value;
        const series = document.getElementById('videoSeries').value;
        const seasons = document.getElementById('videoSeasons').value;
        const status = document.getElementById('videoStatus').value;
        const country = document.getElementById('videoCountry').value;
        const genre = document.getElementById('videoGenre').value;
        const year = document.getElementById('videoYear').value;
        
        if (!file || !title || !description || !series || !seasons || !status || !country || !genre || !year) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        
        const formData = new FormData();
        formData.append('videoFile', file);
        formData.append('title', title);
        formData.append('description', description);
        formData.append('series', series);
        formData.append('seasons', seasons);
        formData.append('status', status);
        formData.append('country', country);
        formData.append('genre', genre);
        formData.append('year', year);
        
        try {
            showStatus('–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ...', 'info');
            const response = await fetch('../upload.php', {
                method: 'POST',
                body: formData
            });
            
            console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É:', response.status);
            
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ');
            }
            
            const result = await response.json();
            console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:', result);
            
            if (result.success) {
                showStatus('–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!', 'success');
                uploadForm.reset();
                loadVideosList(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            } else {
                throw new Error(result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
            showStatus(`–û—à–∏–±–∫–∞: ${error.message}`, 'error');
        }
    });

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –≤–∏–¥–µ–æ
    async function loadVideosList() {
        console.log('üì• –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ...');
        try {
            showStatus('–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ...', 'info');
            const response = await fetch('../get_videos.php');
            
            console.log('üì° –û—Ç–≤–µ—Ç get_videos.php:', response.status);
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}`);
            }
            
            currentVideos = await response.json();
            console.log('üìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ:', currentVideos);
            
            displayVideosList();
            showStatus(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${currentVideos.length} –≤–∏–¥–µ–æ`, 'success');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞:', error);
            showStatus(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`, 'error');
            videosList.innerHTML = '';
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–∏–¥–µ–æ
    function displayVideosList() {
        console.log(`üé¨ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º ${currentVideos.length} –≤–∏–¥–µ–æ`);
        
        if (currentVideos.length === 0) {
            videosList.innerHTML = '<div class="video-item"><p>üì≠ –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p></div>';
            return;
        }

        const videosHTML = currentVideos.map((video, index) => {
            console.log(`üìπ –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤–∏–¥–µ–æ ${index}:`, video.title);
            return `
                <div class="video-item">
                    <h4>üé¨ ${video.title}</h4>
                    <div class="video-details">
                        <span><strong>–ì–æ–¥:</strong> ${video.year || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
                        <span><strong>–°–µ—Ä–∏–∏:</strong> ${video.series}</span>
                        <span><strong>–°–µ–∑–æ–Ω—ã:</strong> ${video.seasons}</span>
                        <span><strong>–°—Ç–∞—Ç—É—Å:</strong> ${video.status}</span>
                        <span><strong>–°—Ç—Ä–∞–Ω–∞:</strong> ${video.country}</span>
                        <span><strong>–ñ–∞–Ω—Ä:</strong> ${video.genre}</span>
                    </div>
                    <div class="filename">üìÅ ${video.filename}</div>
                    <div class="video-actions">
                        <button class="btn-danger btn-small" onclick="window.confirmDeleteVideo(${index})">
                            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ
                        </button>
                    </div>
                </div>
            `;
        }).join('');
        
        videosList.innerHTML = videosHTML;
        console.log('‚úÖ HTML —Å–ø–∏—Å–∫–∞ –≤–∏–¥–µ–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ
    window.confirmDeleteVideo = function(index) {
        console.log(`üóëÔ∏è –í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è confirmDeleteVideo –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞: ${index}`);
        console.log('üìã –¢–µ–∫—É—â–∏–µ –≤–∏–¥–µ–æ:', currentVideos);
        
        if (!currentVideos[index]) {
            console.error('‚ùå –í–∏–¥–µ–æ —Å –∏–Ω–¥–µ–∫—Å–æ–º', index, '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            alert('–û—à–∏–±–∫–∞: –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        const video = currentVideos[index];
        console.log('üé¨ –í–∏–¥–µ–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', video);
        console.log('üìÅ –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', video.filename);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º filename –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏
        const filenameToDelete = video.filename;
        const titleToDelete = video.title;
        
        const deleteAction = () => {
            console.log('üî• –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ:', filenameToDelete);
            deleteVideo(filenameToDelete);
        };
        
        console.log('üíæ –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è:', filenameToDelete);
        console.log('üéØ –§—É–Ω–∫—Ü–∏—è deleteAction —Å–æ–∑–¥–∞–Ω–∞:', typeof deleteAction);
        
        showConfirmModal(
            `–£–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ "${titleToDelete}"? –§–∞–π–ª –∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ.`,
            deleteAction
        );
    };

    // –£–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ
    async function deleteVideo(filename) {
        console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ:', filename);
        
        try {
            showStatus('–£–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ...', 'info');
            
            const requestData = { 
                action: 'delete_single',
                filename: filename 
            };
            
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ:', requestData);
            
            const response = await fetch('../delete_video.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(requestData)
            });

            console.log('üì° –û—Ç–≤–µ—Ç delete_video.php:', response.status);
            console.log('üìã Response OK:', response.ok);
            
            const resultText = await response.text();
            console.log('üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', resultText);
            
            let result;
            try {
                result = JSON.parse(resultText);
                console.log('üìã –ü–∞—Ä—Å–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
            } catch (parseError) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError);
                throw new Error('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON: ' + resultText.substring(0, 100));
            }
            
            if (result.success) {
                showStatus('–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!', 'success');
                console.log('‚úÖ –í–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫');
                loadVideosList(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            } else {
                throw new Error(result.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
            showStatus(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`, 'error');
        }
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∏–¥–µ–æ
    async function deleteAllVideos() {
        console.log('üí• –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∏–¥–µ–æ');
        
        try {
            showStatus('–£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–∏–¥–µ–æ...', 'info');
            
            const response = await fetch('../delete_video.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ action: 'delete_all' })
            });

            console.log('üì° –û—Ç–≤–µ—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö:', response.status);
            
            const result = await response.json();
            console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö:', result);
            
            if (result.success) {
                showStatus('–í—Å–µ –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!', 'success');
                currentVideos = [];
                displayVideosList();
            } else {
                throw new Error(result.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∏–¥–µ–æ:', error);
            showStatus(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`, 'error');
        }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    loadVideosBtn.addEventListener('click', () => {
        console.log('üîÑ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞');
        loadVideosList();
    });
    
    deleteAllBtn.addEventListener('click', () => {
        console.log('üí• –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∏–¥–µ–æ');
        
        if (currentVideos.length === 0) {
            alert('–ù–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
            return;
        }
        
        showConfirmModal(
            `–£–¥–∞–ª–∏—Ç—å –í–°–ï ${currentVideos.length} –≤–∏–¥–µ–æ? –í—Å–µ —Ñ–∞–π–ª—ã –∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ!`,
            deleteAllVideos
        );
    });

    confirmYes.addEventListener('click', () => {
        console.log('‚úÖ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
        console.log('üîç pendingAction —Ç–∏–ø:', typeof pendingAction);
        console.log('üîç pendingAction –∑–Ω–∞—á–µ–Ω–∏–µ:', pendingAction);
        console.log('üìù pendingAction —Ñ—É–Ω–∫—Ü–∏—è?', typeof pendingAction === 'function');
        
        hideConfirmModal();
        
        if (pendingAction && typeof pendingAction === 'function') {
            console.log('üî• –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ');
            try {
                const actionToExecute = pendingAction;
                pendingAction = null; // –û—á–∏—â–∞–µ–º –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                actionToExecute();
                console.log('‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è:', error);
            }
        } else {
            console.warn('‚ö†Ô∏è –ù–µ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
            console.warn('‚ö†Ô∏è pendingAction:', pendingAction);
            pendingAction = null; // –û—á–∏—â–∞–µ–º –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        }
    });

    confirmNo.addEventListener('click', () => {
        console.log('‚ùå –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã');
        hideConfirmModal();
        pendingAction = null; // –û—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
        console.log('üóëÔ∏è pendingAction –æ—á–∏—â–µ–Ω');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –Ω–µ–≥–æ
    confirmModal.addEventListener('click', (e) => {
        if (e.target === confirmModal) {
            console.log('‚ùå –ö–ª–∏–∫ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
            hideConfirmModal();
            pendingAction = null; // –û—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            console.log('üóëÔ∏è pendingAction –æ—á–∏—â–µ–Ω');
        }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM:');
    console.log('uploadForm:', !!uploadForm);
    console.log('loadVideosBtn:', !!loadVideosBtn);
    console.log('deleteAllBtn:', !!deleteAllBtn);
    console.log('videosList:', !!videosList);
    console.log('videosStatus:', !!videosStatus);
    console.log('confirmModal:', !!confirmModal);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    showStatus('–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ.', 'info');
    console.log('üéâ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ v1.3');
});